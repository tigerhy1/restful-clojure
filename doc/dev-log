2016-07-14

clojure已经能对couchbase正常读写了。

下面需要做的是设计数据结构.

第一步，四个表：

1. user:(先只有微信用户登录) 

key: user_{$userId}

userId, name, openId, unionId

2. share:

key: share_{$shareId}

shareId, userId, movieId, description, like_cnt

3. comment:

key: comment_{$commentId}

commentId, shareId, userId, toCommentId, comment

4. movie:

key: movie_{$movieId}

movieId, name.


接口:

get_add_user
add_share
delete_share
add_comment
delete_comment
get_shares
get_shares_by_movie
get_shares_by_user
get_comments

先想想怎么做登录

如果要测试号的话，还得另弄一个微信了。

2016-07-18

先暂时把微信登陆给放一放。先做其他逻辑

2016-07-19

今天考虑把从接到请求到写入数据库，这一整条链条打通。

想了下程序结构的问题，最开始还是准备把所有东西放到一起。这样好维护些.

但是写程序，可以先不考虑登陆认证的事情。

2016-07-20

链条倒是打通了，把get-add-user这个逻辑给打通.

先不要想微信登陆的事情。先手动能测就行。

2016-07-21

还是先不管微信登陆的事情，但是得开始考虑和前端怎么联合起来。

突然想到这不就是Test Driven Developement

下一个功能开发add_share

movie的存储方法和user保持了一致。

share的添加要从share的外部来进行，share保持不和movie耦合。

1234567890123

2016-07-22

今天看有没有办法把add_share功能给弄好。

跑通了，但是还有小问题需要改下.

发现一个小bug, jsonDoc里的content没有弄成map

2016-07-23

还是以乐趣为主

昨天那个小bug在movie里面已经改了，现在get-uid里改.

其实对于clojure的map,还有一个小小的疑问:什么时候可以(:key m) 什么时候可以 (get m key)

再实现一个get-share就有基本功能，可以和前端联调起来了。

还要考虑一下并行的问题,map coll fun，是并行的吗?怎么弄成并行的.



现在到了可以联调的状态了，想了下，有两个事情可以做:

1. map fun r， 这个怎么放到一个list里去(原来用那儿json库，还要加一个response才行呢)

2. add-user, get-user这个逻辑放到单独一个文件里去


2016-07-24

忙里偷闲，写个代码.

现在要做的是把前后端连起来了。

2016-07-25

为了用ring-cors,感觉需要把ring的中间件的原理搞清楚.

2016-07-26

今天不着急，慢慢把ring-cors搞清楚.

CORS算是搞清楚了，进了一大步。

现在的问题是怎么把结果加到response里面.

2016-07-27

跨域访问昨天已经搞定(但好像在生产环境中还是不要跨域，因为至少要多请求一次呀,OPTIONS请求)，

今天的任务是调整接口内容，实现对接。

还有add-share接口.

2016-08-01

compojure get 拿到params搞定了，原来是要用ring-defaults中间件.

check-echo的功能实现好了,现在要做的是部署在那个阿里云机器上.

部署到虚拟机上遇到两个打包的问题: 1. lein uberjar: 主class的namespace要有:gen-class
                             2. 要用带standalone的jar包.
                             
下一步要在上面装couchbase

couchbase已经装好，下次来可以直接开始测微信登陆了。

2016-08-02

微信测试号的服务器配置搞定了.

2016-08-03

前端连不过来，不知道为什么.

是因为elm里面请求地址写的是localhost请求到我自己这台mac上了。。改成远程地址就好了。

2016-08-04

直接接登陆需要的工作还是比较多的，想个办法，先验证clojure ring的session是ok的。

2016-08-05

session是Ok的。

下一步就是搞明白cookie和session的原理。然后看这个架构需不需要重来: index.html放到jetty下

我想了下还是把index.html部署到clojure这个项目里面，以后维护也好维护一些，只用维护一个服务就可以了.

2016-08-07

我觉得直接不变架构，也是可以的，因为只有访问restful_clojure的时候会用cookie.来验证一下.

先把session里username给set出来,然后在redirect到3000端口（主页）,add-share的时候prn username看能不能出来.

2016-08-08

今天第一步是试一试set-session在微信内是否能保持session.

实验证明在微信里的session是能保持的.

昨天还想到一个调试的办法就是用代理charlies调试工具，可以查看session什么的。

还有个可能性: elm那边在做http.send的时候, 没有带上session.

知道问题的点在哪里了，还是跨域的问题.

2016-08-09

还是得用charlies,不过这个值得花时间。

charlies先用office-5g不行，还是用rd的无线网才行.这是什么原理?

在家用局域网的话,是直接可以用呢,还是需要配置呢?

charles可以用了,nice。

现在看到的问题是: 从8080redirect到3000之后,ring-session变掉了.

哦，但是之后ring-session还是不变的.

来看下set-session的过程.

现在怀疑是session的scope的原因: session的东西那不到因为不在一个函数里

现在感觉是redirect没有把session写到服务器端存储.

下一个任务: 把https://github.com/ring-clojure/ring/blob/master/ring-core/src/ring/middleware/session/memory.clj
看懂.

2016-08-10

现象是有ring-session,但是get-share里prn出来的req里面 :session/key nil

下回好好研究下set-session的过程.

换一个url貌似cookie就变一次.研究下cookie了.

还需要了解下sessionStore到底是怎么存的（是不是每个子url都会开一个sessionStore）

2016-08-11

看了源码,貌似明白了一点,每个def + wrap-session都会新创建一个session-map

根据这儿推断，设计了一个实验,就是receive-code的在第二次访问的时候会带上上一次的session,果不其然.

2016-08-12

昨天找出了session被清空的根源,今天要做的就是receive-code和get-share两个放在同一个sessionStore里面.

做两个set-session的函数,放到一个route里面看看效果.

对了，还有需要把网址做成配置的，这样就不用换代码了，然后本机远程都能跑.

这个wrap-session的地方感觉是一个基础代码架构的问题，要好好想清楚了.

还是回到wrap-session,两个session这样比较好，思路可能会清晰.

2016-08-13

用set-session写出来代码之后，思路已经很清晰了。

嘿嘿,session的传递搞定.

2016-08-14

微信登陆的策略：

1. 加一个key-series, 可以通过unionId找到userId(内部的)

2. receive-code的时候, 从微信平台哪里拿到了unionId之后，把userId放到session里面,如果不存在这个unionId的话，
   需要add user一下.
   
2016-08-15

先花一定的时间把weixin login的东西拎出来.

get-add-user原来有现成的,嘿嘿.

还有一个困惑, 有时候连接couchbase会出现两次.

现在的问题是session里的userid里存的是couchbase里get出来的result.

登陆这块弄完了，不错。

现在需要优化一下页面的逻辑:

1. 分页, 想做成动态加载的方式.

2. tab页

想的清楚了一些： tab: 发现，分享，我的

2016-08-16

看了“京东联盟”,针对一本书做链接购买的方式应该是没问题的.

还可以看亚马逊联盟, 51返利网.

回到技术方面,今天计划开始做下拉分页.

现在的计划是参考下面这个网址,自己做一个滚动的,好处是可以自己多一些控制,了解原理.
http://qiita.com/kimagure/items/57cdd08bdf56cc51d294

2016-08-19

为了实现dynamic load，这边也要改一下:

get-share offset size

   if offset = 0:
     fetch 最新的+size
   else:
     fetch (offset-size+1 ~ offset)
     
2016-08-22

add-share合并session也是一个有些难度的事情,要好好整理下代码,通过问题学习进步.

现在遇到的问题，估计又是跨域访问的问题,一会儿再来看.

2016-08-23

我觉得现在一个比较好的方法就是从代码上看问题.



